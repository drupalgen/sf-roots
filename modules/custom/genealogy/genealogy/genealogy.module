<?php
/**
 * @file
 * Genealogy module file
 */

/**
 * Implements hook_form_alter().
 */
function genealogy_form_alter(&$form, &$form_state, $form_id) {
  // Remove revision information from vertical tabs.
  unset($form['revision_information']['#group']);
  //$form['log'] = $form['revision_information']['log'];
  //unset($form['revision_information']['log']);
}
/**
 * Private helper function to load taxonomy terms into vocabularies.
 */
function _genealogy_add_terms_to_vocabulary($terms, $vocabulary) {
  $vocabularies = array_keys(taxonomy_vocabulary_get_names());
  if(!in_array($vocabulary->name, $vocabularies)) {
    taxonomy_vocabulary_save($vocabulary);
  } else {
    $vocab = $taxonomy_vocabulary_machine_name_load($vocabulary->name);
    $vocabulary = $vocab;
  }
  foreach ($terms as $term) {
    $term_weight = 0;
    $term_obj = new stdClass();
    $term_obj->vid = $vocabulary->vid;
    $term_obj->name = $term;
    $term_obj->weight = $term_weight;
    taxonomy_term_save($term_obj);
    $term_weight = $term_weight + 5;
  }
}

/**
 * Implements hook_menu().
 */
function genealogy_menu() {

  $items = array();

  $items['node/add/%/%ctools_js'] = array(
    'title' => t('Add'),
    'page arguments' => array(2, 3),
    'page callback' => 'genealogy_add_node_modal_page',
    'access arguments' => array('create person content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['node/%node/edit/%ctools_js'] = array(
    'title' => t('Edit'),
    'page arguments' => array(1, 3),
    'page callback' => 'genealogy_edit_node_modal_page',
    'access arguments' => array('edit person content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback for 'node/add/%/%ctools_js'.
 */
function genealogy_add_node_modal_page($type = NULL, $js = FALSE) {
  // If javascript is not enabled...
  if (!$js) {
    return drupal_goto('node/add/' . $type);
  }

  $force_page_reload = FALSE;
  // Include node.pages.inc so node edit form is available.
  ctools_include('node.pages', 'node', '');
  ctools_include('modal');
  ctools_include('ajax');

  // Get node form defaults.
  global $user;
  $node = (object) array(
    'uid' => $user->uid,
    'name' => (isset($user->name) ? $user->name : ''),
    'type' => $type,
    'language' => LANGUAGE_NONE
  );
  $camelcase = ucwords($type);
  $form_state = array(
    'title' => t('Add a @node', array('@node' => $camelcase)),
    'ajax'  => TRUE,
    'build_info' => array(
      'args'  => array($node),
    ),
  );
  $force_page_reload = FALSE;
  $commands = ctools_modal_form_wrapper('person_node_form', $form_state);

  if (!empty($form_state['executed']) && empty($form_state['rebuild'])) {
    // overwrite commands.
    $commands = array();
    ctools_add_js('ajax-responder');
    $title = t('Congratulations!');
    $path = drupal_get_path_alias('node/' . $form_state['nid']);
    $body = theme('status_messages');
    $commands[] = ctools_modal_command_display($title, $body);
    $commands[] = ctools_ajax_command_redirect($path, 1500);
    if ($force_page_reload) {
      $commands[] = ctools_ajax_command_reload();
    }
  }

  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // add CSS class to Modal-Frame
  $commands[] = ajax_command_invoke('#modalContent', 'addClass', array('gen-' . $type . '-node add-a-' . $type));

  print ajax_render($commands);
  drupal_exit();
}

/**
 * Page callback for 'node/%node/edit/%ctools_js'
 */
function genealogy_edit_node_modal_page($node, $js = FALSE) {
  // If javascript is not enabled...
  if (!$js) {
    return drupal_goto('node/' . $node->nid . '/edit');
  }

  $force_page_reload = FALSE;
  // Include node.pages.inc so node edit form is available.
  ctools_include('node.pages', 'node', '');
  ctools_include('modal');
  ctools_include('ajax');

  // Get node form defaults.
  global $user;
  $form_state = array(
    'title' => t('Edit a Person'),
    'ajax'  => TRUE,
    'build_info' => array(
      'args'  => array($node),
    ),
  );
  $force_page_reload = FALSE;
  $commands = ctools_modal_form_wrapper('person_node_form', $form_state);

  if (!empty($form_state['executed']) && empty($form_state['rebuild'])) {
    // overwrite commands.
    $commands = array();
    ctools_add_js('ajax-responder');
    $title = t('Congratulations!');
    $path = drupal_get_path_alias('node/' . $form_state['nid']);
    $body = theme('status_messages');
    $commands[] = ctools_modal_command_display($title, $body);
    $commands[] = ctools_ajax_command_redirect($path, 1500);
    if ($force_page_reload) {
      $commands[] = ctools_ajax_command_reload();
    }
  }

  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // add CSS class to Modal-Frame
  $commands[] = ajax_command_invoke('#modalContent', 'addClass', array('gen-person-node edit-a-person'));

  print ajax_render($commands);
  drupal_exit();

}
